{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", null, \"Todo App\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"inputField\"\n};\nconst _hoisted_4 = {\n  class: \"todoList\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"footer\"\n};\nconst _hoisted_8 = {\n  class: \"pendingTasks\"\n};\nconst _hoisted_9 = {\n  class: \"pendingTasks\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Add your new todo\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.task = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.task]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addNewTodo && $options.addNewTodo(...args), [\"prevent\"]))\n  }, \"+\")]), _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.isActive,\n      class: _normalizeClass({\n        completed: todo.isActive\n      }),\n      onClick: $event => _ctx.$set(todo, 'isActive', !todo.isActive)\n    }, [_createTextVNode(_toDisplayString(todo.task) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", {\n      onClick: $event => $options.deleteTodo(index)\n    }, _toDisplayString(todo.delete), 9 /* TEXT, PROPS */, _hoisted_6)], 10 /* CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" <li v-for=\\\"(todo, index) in todos1\\\" v-bind:key=\\\"todo.isActive\\\" :class=\\\"{ completed: !todo.isActive }\\\"\\r\\n        @click=\\\"$set(todo, 'isActive', !todo.isActive)\\\">\\r\\n        {{ todo.task }} <span v-on:click=\\\"deleteTodo(index)\\\">{{ todo.delete }}</span>\\r\\n      </li> \"), _createCommentVNode(\" <li v-for=\\\"todo in todos1\\\" v-bind:key=\\\"todo\\\">\\r\\n        {{ todo.task }}\\r\\n      </li> \")]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", null, [_createTextVNode(\"You have \"), _createElementVNode(\"span\", _hoisted_8, _toDisplayString($data.todos.length), 1 /* TEXT */), _createTextVNode(\" pending tasks\")]), _createElementVNode(\"span\", null, [_createTextVNode(\"You have \"), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($data.todos1.length), 1 /* TEXT */), _createTextVNode(\" Completed tasks\")]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.deleteAllTodo && $options.deleteAllTodo(...args))\n  }, \"Clear All\")])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAS;gCAClBC,oBAAyB,gBAAjB,UAAQ;;EACXD,KAAK,EAAC;AAAY;;EAInBA,KAAK,EAAC;AAAU;;;;EAafA,KAAK,EAAC;AAAQ;;EACIA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAc;;uBArB7CE,oBAwBM,OAxBNC,UAwBM,GAvBJC,UAAyB,EACzBH,oBAGM,OAHNI,UAGM,mBAFJJ,oBAAkE;IAA3DK,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,mBAAmB;+DAAUC,UAAI;iDAAJA,UAAI,KAChEP,oBAA8C;IAArCQ,OAAK,wDAAUC,mDAAU;KAAE,GAAC,KAEvCT,oBAYK,MAZLU,UAYK,sBAXHT,oBAGKU,6BAHuBJ,WAAK,GAArBK,IAAI,EAAEC,KAAK;yBAAvBZ,oBAGK;MAHqCa,GAAG,EAAEF,IAAI,CAACG,QAAQ;MAAGhB,KAAK;QAAAiB,WAAeJ,IAAI,CAACG;MAAQ;MAC7FP,OAAK,YAAES,SAAI,CAACL,IAAI,eAAeA,IAAI,CAACG,QAAQ;0CAC1CH,IAAI,CAACM,IAAI,IAAG,GAAC,qCAA6D;MAAlDV,OAAK,YAAEC,mBAAU,CAACI,KAAK;wBAAMD,IAAI,CAACO,MAAM;kCAErEC,4SAGS,EACTA,oHAES,IAEXpB,oBAIM,OAJNqB,UAIM,GAHJrB,oBAAwF,gCAAlF,WAAS,uBAAoD,QAApDsB,UAAoD,mBAAtBf,WAAK,CAACgB,MAAM,mCAAU,gBAAc,KACjFvB,oBAA2F,gCAArF,WAAS,uBAAqD,QAArDwB,UAAqD,mBAAvBjB,YAAM,CAACgB,MAAM,mCAAU,kBAAgB,KACpFvB,oBAAiD;IAAxCQ,OAAK,yCAAEC,yDAAa;KAAE,WAAS","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","placeholder","$data","onClick","$options","_hoisted_4","_Fragment","todo","index","key","isActive","completed","_ctx","task","delete","_createCommentVNode","_hoisted_7","_hoisted_8","length","_hoisted_9"],"sourceRoot":"","sources":["C:\\Users\\lsutraye\\todo\\src\\components\\todoComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <header>Todo App</header>\r\n    <div class=\"inputField\">\r\n      <input type=\"text\" placeholder=\"Add your new todo\" v-model=\"task\">\r\n      <button @click.prevent=\"addNewTodo\">+</button>\r\n    </div>\r\n    <ul class=\"todoList\">\r\n      <li v-for=\"(todo, index) in todos\" v-bind:key=\"todo.isActive\" :class=\"{ completed: todo.isActive }\"\r\n        @click=\"$set(todo, 'isActive', !todo.isActive)\">\r\n        {{ todo.task }} <span v-on:click=\"deleteTodo(index)\">{{ todo.delete }}</span>\r\n      </li>\r\n      <!-- <li v-for=\"(todo, index) in todos1\" v-bind:key=\"todo.isActive\" :class=\"{ completed: !todo.isActive }\"\r\n        @click=\"$set(todo, 'isActive', !todo.isActive)\">\r\n        {{ todo.task }} <span v-on:click=\"deleteTodo(index)\">{{ todo.delete }}</span>\r\n      </li> -->\r\n      <!-- <li v-for=\"todo in todos1\" v-bind:key=\"todo\">\r\n        {{ todo.task }}\r\n      </li> -->\r\n    </ul>\r\n    <div class=\"footer\">\r\n      <span>You have <span class=\"pendingTasks\">{{ todos.length }}</span> pending tasks</span>\r\n      <span>You have <span class=\"pendingTasks\">{{ todos1.length }}</span> Completed tasks</span>\r\n      <button @click=\"deleteAllTodo\">Clear All</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n  name: 'todoComponent',\r\n  data() {\r\n    return {\r\n      todos: [\r\n        // { task: 'Have breakfast', delete:'(x)'},\r\n        // { task: 'Go to the gym', delete:'(x)'},\r\n        // { task: 'Study Vuejs', delete:'(x)'}\r\n      ],\r\n      todos1: [\r\n         { task: 'Have breakfast', delete:'(x)'},\r\n        { task: 'Go to the gym', delete:'(x)'},\r\n        { task: 'Study Vuejs', delete:'(x)'}\r\n      ],\r\n      task: '',\r\n    }\r\n  },\r\n  mounted() {\r\n    this.todos = JSON.parse(localStorage.getItem(\"todos\"));\r\n    // this.todos1 = JSON.parse(localStorage.getItem(\"todos1\"));\r\n  },\r\n  methods: {\r\n    /* eslint-disable */\r\n    addNewTodo: function () {\r\n      if (this.task != '') {\r\n        let todo = { task: this.task, delete: '(x)' };\r\n        this.todos.push(todo);\r\n        localStorage.setItem(\"todos\", JSON.stringify(this.todos));\r\n\r\n        this.task = ''; // clear input\r\n      } else {\r\n        alert(\"Please enter Text\");\r\n      }\r\n    },\r\n    deleteTodo: function (index) {\r\n      this.todos.splice(index,1);\r\n      this.todos1.push(this.todo[index]);\r\n      console.log(this.todos1);\r\n      this.saveTasksToLocalStorage();\r\n    },\r\n    deleteAllTodo() {\r\n      if (confirm('Are You Sure?')) {\r\n        this.todos.length = 0;\r\n        this.saveTasksToLocalStorage();\r\n      }\r\n    },\r\n    saveTasksToLocalStorage() {\r\n      localStorage.setItem(\"todos\", JSON.stringify(this.todos));\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap');\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: 'Poppins', sans-serif;\r\n}\r\n\r\n::selection {\r\n  color: #ffff;\r\n  background: rgb(142, 73, 232);\r\n}\r\n\r\nbody {\r\n  width: 100%;\r\n  height: 100vh;\r\n  padding: 10px;\r\n  background: linear-gradient(to bottom, #68EACC 0%, #497BE8 100%);\r\n}\r\n\r\n.wrapper {\r\n  background: #fff;\r\n  max-width: 400px;\r\n  width: 100%;\r\n  margin: 120px auto;\r\n  padding: 25px;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 10px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.wrapper header {\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n}\r\n\r\n.wrapper .inputField {\r\n  margin: 20px 0;\r\n  width: 100%;\r\n  display: flex;\r\n  height: 45px;\r\n}\r\n\r\n.inputField input {\r\n  width: 85%;\r\n  height: 100%;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  border: 1px solid #ccc;\r\n  font-size: 17px;\r\n  padding-left: 15px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.inputField input:focus {\r\n  border-color: #8E49E8;\r\n}\r\n\r\n.inputField button {\r\n  width: 50px;\r\n  height: 100%;\r\n  border: none;\r\n  color: #fff;\r\n  margin-left: 5px;\r\n  font-size: 21px;\r\n  outline: none;\r\n  background: #8E49E8;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n  opacity: 0.6;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.inputField button:hover,\r\n.footer button:hover {\r\n  background: #721ce3;\r\n}\r\n\r\n.inputField button.active {\r\n  opacity: 1;\r\n  pointer-events: auto;\r\n}\r\n\r\n.wrapper .todoList {\r\n  max-height: 250px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.todoList li {\r\n  position: relative;\r\n  list-style: none;\r\n  margin-bottom: 8px;\r\n  background: #f2f2f2;\r\n  border-radius: 3px;\r\n  padding: 10px 15px;\r\n  cursor: default;\r\n  overflow: hidden;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.todoList li .icon {\r\n  position: absolute;\r\n  right: -45px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: #e74c3c;\r\n  width: 45px;\r\n  text-align: center;\r\n  color: #fff;\r\n  padding: 10px 15px;\r\n  border-radius: 0 3px 3px 0;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.todoList li:hover .icon {\r\n  right: 0px;\r\n}\r\n\r\n.wrapper .footer {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.footer button {\r\n  padding: 6px 10px;\r\n  border-radius: 3px;\r\n  border: none;\r\n  outline: none;\r\n  color: #fff;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  margin-left: 5px;\r\n  background: #8E49E8;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  opacity: 0.6;\r\n  /* pointer-events: none; */\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.footer button.active {\r\n  opacity: 1;\r\n  pointer-events: auto;\r\n}\r\n\r\n.completed {\r\n  text-decoration: line-through;\r\n}</style>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}